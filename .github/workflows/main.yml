name: Cross-Platform Go Build and Release

on:
  push:
    tags:
      - 'v*' # Triggers only on version tags, e.g., v1.0.0

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Add additional platforms as needed
        os: [linux, windows, darwin]
        arch: [amd64, arm64]
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Cross-compile for ${{ matrix.os }}/${{ matrix.arch }}
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 0
        run: |
          VERSION=${GITHUB_REF_NAME}
          BINARY_NAME="hello_${{ matrix.os }}_${{ matrix.arch }}"
          if [ "${{ matrix.os }}" = "windows" ]; then
            BINARY_NAME+=".exe"
          fi
          go build -o $BINARY_NAME -ldflags "-X main.version=$VERSION" main.go
          echo "::set-output name=binary_name::$BINARY_NAME"

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.build.outputs.binary_name }}
          path: ${{ steps.build.outputs.binary_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/
          asset_name: ${{ github.ref_name }}-${{ matrix.os }}-${{ matrix.arch }}
          asset_content_type: application/octet-stream
