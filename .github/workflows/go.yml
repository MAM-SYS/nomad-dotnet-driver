name: Go CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  # Step 1: Set up the build and test job
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'  # Specify Go version

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod tidy

    - name: Run tests
      run: go test ./... -v

  # Step 2: Release job to create a release when a tag is pushed
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build  # Ensure release happens only after build succeeds

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'
    - name: Build the project
      run: |
        go build -o nomad-dotnet-driver .

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: nomad-dotnet-driver

    - name: Upload release assets
      uses: actions/upload-artifact@v3
      with:
        name: nomad-dotnet-driver
        path: nomad-dotnet-driver
